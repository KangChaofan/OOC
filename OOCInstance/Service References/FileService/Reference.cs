//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.17929
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace OOC.Instance.FileService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenericResponse", Namespace="http://schemas.datacontract.org/2004/07/OOC.Contract.Data.Response")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OOC.Instance.FileService.FileEntityResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OOC.Instance.FileService.FileListResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OOC.Instance.FileService.FileStatResponse))]
    public partial class GenericResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuccessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((this.ErrorCodeField.Equals(value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorInfo {
            get {
                return this.ErrorInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorInfoField, value) != true)) {
                    this.ErrorInfoField = value;
                    this.RaisePropertyChanged("ErrorInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileEntityResponse", Namespace="http://schemas.datacontract.org/2004/07/OOC.Contract.Data.Response")]
    [System.SerializableAttribute()]
    public partial class FileEntityResponse : OOC.Instance.FileService.GenericResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileListResponse", Namespace="http://schemas.datacontract.org/2004/07/OOC.Contract.Data.Response")]
    [System.SerializableAttribute()]
    public partial class FileListResponse : OOC.Instance.FileService.GenericResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OOC.Instance.FileService.FileDescription[] FilesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OOC.Instance.FileService.FileDescription[] Files {
            get {
                return this.FilesField;
            }
            set {
                if ((object.ReferenceEquals(this.FilesField, value) != true)) {
                    this.FilesField = value;
                    this.RaisePropertyChanged("Files");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileStatResponse", Namespace="http://schemas.datacontract.org/2004/07/OOC.Contract.Data.Response")]
    [System.SerializableAttribute()]
    public partial class FileStatResponse : OOC.Instance.FileService.GenericResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SizeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Size {
            get {
                return this.SizeField;
            }
            set {
                if ((this.SizeField.Equals(value) != true)) {
                    this.SizeField = value;
                    this.RaisePropertyChanged("Size");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileDescription", Namespace="http://schemas.datacontract.org/2004/07/OOC.Contract.Data.Common")]
    [System.SerializableAttribute()]
    public partial class FileDescription : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SizeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Size {
            get {
                return this.SizeField;
            }
            set {
                if ((this.SizeField.Equals(value) != true)) {
                    this.SizeField = value;
                    this.RaisePropertyChanged("Size");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FileService.IFileService")]
    public interface IFileService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/Stat", ReplyAction="http://tempuri.org/IFileService/StatResponse")]
        OOC.Instance.FileService.FileStatResponse Stat(string fileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/Stat", ReplyAction="http://tempuri.org/IFileService/StatResponse")]
        System.Threading.Tasks.Task<OOC.Instance.FileService.FileStatResponse> StatAsync(string fileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/Get", ReplyAction="http://tempuri.org/IFileService/GetResponse")]
        OOC.Instance.FileService.FileEntityResponse Get(string fileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/Get", ReplyAction="http://tempuri.org/IFileService/GetResponse")]
        System.Threading.Tasks.Task<OOC.Instance.FileService.FileEntityResponse> GetAsync(string fileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/Delete", ReplyAction="http://tempuri.org/IFileService/DeleteResponse")]
        OOC.Instance.FileService.GenericResponse Delete(string fileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/Delete", ReplyAction="http://tempuri.org/IFileService/DeleteResponse")]
        System.Threading.Tasks.Task<OOC.Instance.FileService.GenericResponse> DeleteAsync(string fileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/Put", ReplyAction="http://tempuri.org/IFileService/PutResponse")]
        OOC.Instance.FileService.GenericResponse Put(string fileName, byte[] content);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/Put", ReplyAction="http://tempuri.org/IFileService/PutResponse")]
        System.Threading.Tasks.Task<OOC.Instance.FileService.GenericResponse> PutAsync(string fileName, byte[] content);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/Copy", ReplyAction="http://tempuri.org/IFileService/CopyResponse")]
        OOC.Instance.FileService.GenericResponse Copy(string sourceFileName, string destFileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/Copy", ReplyAction="http://tempuri.org/IFileService/CopyResponse")]
        System.Threading.Tasks.Task<OOC.Instance.FileService.GenericResponse> CopyAsync(string sourceFileName, string destFileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/List", ReplyAction="http://tempuri.org/IFileService/ListResponse")]
        OOC.Instance.FileService.FileListResponse List(string path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/List", ReplyAction="http://tempuri.org/IFileService/ListResponse")]
        System.Threading.Tasks.Task<OOC.Instance.FileService.FileListResponse> ListAsync(string path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/CreateDirectory", ReplyAction="http://tempuri.org/IFileService/CreateDirectoryResponse")]
        OOC.Instance.FileService.GenericResponse CreateDirectory(string path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/CreateDirectory", ReplyAction="http://tempuri.org/IFileService/CreateDirectoryResponse")]
        System.Threading.Tasks.Task<OOC.Instance.FileService.GenericResponse> CreateDirectoryAsync(string path);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFileServiceChannel : OOC.Instance.FileService.IFileService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FileServiceClient : System.ServiceModel.ClientBase<OOC.Instance.FileService.IFileService>, OOC.Instance.FileService.IFileService {
        
        public FileServiceClient() {
        }
        
        public FileServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FileServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FileServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FileServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public OOC.Instance.FileService.FileStatResponse Stat(string fileName) {
            return base.Channel.Stat(fileName);
        }
        
        public System.Threading.Tasks.Task<OOC.Instance.FileService.FileStatResponse> StatAsync(string fileName) {
            return base.Channel.StatAsync(fileName);
        }
        
        public OOC.Instance.FileService.FileEntityResponse Get(string fileName) {
            return base.Channel.Get(fileName);
        }
        
        public System.Threading.Tasks.Task<OOC.Instance.FileService.FileEntityResponse> GetAsync(string fileName) {
            return base.Channel.GetAsync(fileName);
        }
        
        public OOC.Instance.FileService.GenericResponse Delete(string fileName) {
            return base.Channel.Delete(fileName);
        }
        
        public System.Threading.Tasks.Task<OOC.Instance.FileService.GenericResponse> DeleteAsync(string fileName) {
            return base.Channel.DeleteAsync(fileName);
        }
        
        public OOC.Instance.FileService.GenericResponse Put(string fileName, byte[] content) {
            return base.Channel.Put(fileName, content);
        }
        
        public System.Threading.Tasks.Task<OOC.Instance.FileService.GenericResponse> PutAsync(string fileName, byte[] content) {
            return base.Channel.PutAsync(fileName, content);
        }
        
        public OOC.Instance.FileService.GenericResponse Copy(string sourceFileName, string destFileName) {
            return base.Channel.Copy(sourceFileName, destFileName);
        }
        
        public System.Threading.Tasks.Task<OOC.Instance.FileService.GenericResponse> CopyAsync(string sourceFileName, string destFileName) {
            return base.Channel.CopyAsync(sourceFileName, destFileName);
        }
        
        public OOC.Instance.FileService.FileListResponse List(string path) {
            return base.Channel.List(path);
        }
        
        public System.Threading.Tasks.Task<OOC.Instance.FileService.FileListResponse> ListAsync(string path) {
            return base.Channel.ListAsync(path);
        }
        
        public OOC.Instance.FileService.GenericResponse CreateDirectory(string path) {
            return base.Channel.CreateDirectory(path);
        }
        
        public System.Threading.Tasks.Task<OOC.Instance.FileService.GenericResponse> CreateDirectoryAsync(string path) {
            return base.Channel.CreateDirectoryAsync(path);
        }
    }
}
